It shall be verified that all forms containing protected information have disabled client side caching, including autocomplete features.
It shall be verified that all protected data is sent to the server in the HTTP message body (i.e., URL parameters shall never be used to send protected data).
It shall be verified that all cached or temporary copies of protected data stored on the server are protected from unauthorized access, and that those temporary working files are purged a soon as they are no longer required.
Client-side caching or temporary copies of pages containing protected data shall be disabled. Additionally, it shall be verified that such copies are protected from unauthorized access or purged/invalidated after an authorized user accesses the protected data). (Cache-Control: no-store, may be used in conjunction with HTTP header control "Pragma: no-cache", which is less effective, but is HTTP/1.0 backward compatible).
It shall be verified that the list of protected data processed by the application is identified, and that there is an explicit policy for how access to this data must be controlled, and when this data must be encrypted (both at rest and in transit). Additionally, it shall be verified that such policy is properly enforced.
It shall be verified that there is a method to remove each type of protected data from the application at the end of its required retention period.
It shall be verified that the application minimizes the number of parameters sent to untrusted systems, such as hidden fields, Ajax variables, cookies and header values.
It shall be verified that the application has the ability to detect and alert on abnormal numbers of requests for information, or on the processing of high value transactions for a user's role, such as screen scraping, automated use of web service extraction, or data loss prevention. For example, the average user shall not be able to access more than 5 records per hour or 30 records per day.
It shall be verified that credentials used by the application on the server side; such as database connection, password and encryption secret keys; are not hard coded. Any credentials shall be stored in a separate configuration file on a trusted system and shall be encrypted.
It shall be verified that autocomplete features are disabled on forms expected to contain protected information, including authentication.
